package com.radha;
import javax.ws.rs.*;



import javax.ws.rs.core.*;


import javax.persistence.*;

import java.net.URI;
import java.util.*;

import javax.ws.rs.HttpMethod;
import net.sf.json.*;

@Path("/UserService")
public class UserResource {

	public UserResource(UriInfo uriinfo,EntityManager em,String str) {
		// TODO Auto-generated constructor stubg
	}
		
		
		 @HttpContext UriInfo uriInfo;    

	       @PersistenceUnit(unitName = "TestJPARest")
	       EntityManagerFactory emf;

	       
	       
	       @SuppressWarnings("unchecked")
		public List<User1> getUsers() {
	    	   
	    	    emf = Persistence.createEntityManagerFactory("TestJPARest");
	    	 EntityManager   em = emf.createEntityManager();
	    	    	    em.getTransaction().begin();
	           List<User1> res= em.createQuery(
	                  "SELECT u from User1 u").getResultList();
	           em.getTransaction().commit();
	           em.close();
	           return res;
	       }
	    
	       @UriTemplate("{userid}/")
	       public UserResource getUser(@UriParam("userid") 
	              String userid) {
	           return new UserResource(
	                  uriInfo, emf.createEntityManager(), userid);
	       }

	     //  @HttpMethod("GET")
	       @GET
	       @Path ("/users")
	       @Produces("application/json")
	       public JSONArray getUsersAsJsonArray() {
	           JSONArray uriArray = new JSONArray();
	           UriBuilder ub = null;
	           for (User1 userEntity : getUsers()) {
	               ub = (ub == null) ? 
	                      uriInfo.getBuilder() : ub.clone();
	                      URI userUri = ub.
	                              path(String.valueOf(userEntity.getUserid())).build();
	                              
	                      uriArray.add(userUri);
	           
	       }
	           return uriArray;
	}
}


