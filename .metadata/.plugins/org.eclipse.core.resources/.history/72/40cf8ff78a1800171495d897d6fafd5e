package model;
import javax.ws.rs.*;
import javax.ws.rs.client.*;
import javax.ws.rs.core.*;

import javax.ws.rs.ext.*;
import javax.persistence.*;

import java.net.URI;
import java.util.*;
import javax.ws.rs.*;
import javax.ws.rs.HttpMethod;
import net.sf.json.*;
import javax.ws.rs.HttpMethod;

public class UserResource {

	public UserResource() {
		// TODO Auto-generated constructor stub
	}
		
		
		 @HttpContext UriInfo uriInfo;    

	       @PersistenceUnit(unitName = "BookmarkPU")
	       EntityManagerFactory emf;

	       
	       
	       public List<UserEntity> getUsers() {
	           return emf.createEntityManager().createQuery(
	                  "SELECT u from UserEntity u").getResultList();
	       }
	    
	       @UriTemplate("{userid}/")
	       public UserResource getUser(@UriParam("userid") 
	              String userid) {
	           return new UserResource(
	                  uriInfo, emf.createEntityManager(), userid);
	       }

	       @HttpMethod("GET")
	       @ProduceMime("application/json")
	       public JSONArray getUsersAsJsonArray() {
	           JSONArray uriArray = new JSONArray();
	           UriBuilder ub = null;
	           for (UserEntity userEntity : getUsers()) {
	               ub = (ub == null) ? 
	                      uriInfo.getBuilder() : ub.clone();
	               URI userUri = ub.
	                       path(userEntity.getUserid()).
	                       build();
	               uriArray.put(userUri.toString());
	           }
	           return uriArray;
	       }
	}


